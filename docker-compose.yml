version: "3.1"
services:
  messager:
    image: rabbitmq:3.7.2
    hostname: my-rabbit
  phantomjs:
    image: superpolkadance/phantomjs:1.0
    logging:
      driver: "none"
    deploy:
      restart_policy:
        condition: on-failure
  redis:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - redis-db:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  web:
    build: web
    command: ./bin/app
    links:
      - redis
    ports:
      - "8080:8080"
    depends_on:
      - redis
    environment:
      - PORT=8080
    volumes:
      - ./dictionary:/go/src/app/dictionary
      - web-stuff:/go/src/app/dist
  natlang:
    build: natlang
    command: python app.py
    depends_on:
      - phantomjs
      - redis
    links:
      - phantomjs:browser
      - messager
      - redis
    deploy:
      restart_policy:
        condition: on-failure
  images:
    build: images
    command: python app.py
    links:
      - redis
      - messager
    depends_on:
      - redis
    volumes:
      - ./dictionary:/usr/src/app/cow
    environment:
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    deploy:
      restart_policy:
        condition: on-failure
  frontend:
    build: frontend
    volumes:
      - web-stuff:/go/src/app/dist
  scraper:
    build: scraper
    command: python app.py
    links:
      - phantomjs:browser
      - redis
      - messager
volumes:
  web-stuff:
  redis-db:
networks:
  redis:
  messager:
